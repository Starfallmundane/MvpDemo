apply plugin: 'com.android.application'

def appVersion = "mvpdemo"

def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

/** 方法二，步骤2 */
//def keystorePropertiesFile = rootProject.file("key.properties")
//def keystoreProperties = new Properties()
//keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.lx.mvpdemo"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    // 修改打包的apk的名字
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = appVersion + "_V" + defaultConfig.versionName + "_" + releaseTime() + ".apk"
        }
    }

    /** 方法二，步骤1 */
//    signingConfigs {
//        release {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//            storeFile file("../mvpdemo.jks")
//        }
//    }


    /**方法一 */
    signingConfigs {
        release {
            keyAlias "mvpdemo"
            keyPassword "123456"
            storePassword "123456"
            storeFile file("../mvpdemo.jks")
        }
    }


    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }


    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'

    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'

    implementation 'io.reactivex:rxjava:1.3.0'      //RxJava 的异步实现，是通过一种扩展的观察者模式来实现的
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
//    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.7.2'

    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    //Android的事件发布-订阅总线
    implementation 'org.greenrobot:eventbus:3.2.0'
    //轮播图
    implementation 'com.youth.banner:banner:2.0.10'
    //倒计时
    implementation 'com.github.iwgang:countdownview:2.1.6'

}